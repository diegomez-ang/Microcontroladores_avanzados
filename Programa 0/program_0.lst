CCS PCM C Compiler, Version 5.025, 11345               24-feb.-21 11:02

               Filename:   C:\Users\E531\Desktop\Picc\Programa 0\program_0.lst

               ROM used:   56 words (1%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           6 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses HS, NOWDT, BROWNOUT, NOLVP 
.................... #use delay (clock = 4000000) 
0004:  MOVLW  21
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #byte port_a = 5   // renombrando el puerto  
.................... #byte port_b = 6   // renombrando el puerto  
.................... #byte port_c = 7   // renombrando el puerto  
.................... #byte port_d = 8   // renombrando el puerto  
.................... #byte port_c = 9   // renombrando el puerto  
....................  
....................  
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
.................... { 
....................    set_tris_b(0x00); 
0024:  MOVLW  00
0025:  MOVWF  06
....................    port_b=(0x00); 
0026:  BCF    03.5
0027:  CLRF   06
....................     
....................    while(true) 
....................    { 
....................       output_high(pin_B0); 
0028:  BSF    03.5
0029:  BCF    06.0
002A:  BCF    03.5
002B:  BSF    06.0
....................       delay_ms(100); 
002C:  MOVLW  64
002D:  MOVWF  21
002E:  CALL   004
....................       output_low(pin_B0); 
002F:  BSF    03.5
0030:  BCF    06.0
0031:  BCF    03.5
0032:  BCF    06.0
....................       delay_ms(100); 
0033:  MOVLW  64
0034:  MOVWF  21
0035:  CALL   004
0036:  GOTO   028
....................    } 
....................     
....................  
.................... } 
....................  
0037:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
