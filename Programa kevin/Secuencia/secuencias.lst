CCS PCM C Compiler, Version 5.025, 11345               24-feb.-21 14:56

               Filename:   C:\Users\E531\Desktop\Picc\Programa kevin\Secuencia\secuencias.lst

               ROM used:   276 words (3%)
                           Largest free fragment is 2048
               RAM used:   8 (2%) at main() level
                           9 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses HS, NOWDT, BROWNOUT, NOLVP 
.................... #use delay (clock = 4000000) 
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #byte port_c = 7 
.................... int i = 0; 
....................  
....................  
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  CLRF   20
001D:  MOVLW  FF
001E:  MOVWF  21
001F:  BSF    03.5
0020:  BSF    1F.0
0021:  BSF    1F.1
0022:  BSF    1F.2
0023:  BCF    1F.3
0024:  MOVLW  07
0025:  MOVWF  1C
0026:  BCF    03.7
.................... { 
....................    set_tris_c(0x00); 
0027:  MOVLW  00
0028:  MOVWF  07
0029:  BCF    03.5
002A:  MOVWF  21
....................    port_c=(0x00); 
002B:  CLRF   07
....................     
....................    while (true) 
....................    { 
....................       for(i=0; i<5;i++) 
002C:  CLRF   20
002D:  MOVF   20,W
002E:  SUBLW  04
002F:  BTFSS  03.0
0030:  GOTO   112
....................       { 
....................          ///secuencia 1 
....................          for(i=0;i<2;i++) 
0031:  CLRF   20
0032:  MOVF   20,W
0033:  SUBLW  01
0034:  BTFSS  03.0
0035:  GOTO   054
....................          { 
....................             output_c(0x0f); 
0036:  MOVLW  00
0037:  MOVWF  21
0038:  BSF    03.5
0039:  CLRF   07
003A:  MOVLW  0F
003B:  BCF    03.5
003C:  MOVWF  07
....................             delay_ms(1000); 
003D:  MOVLW  04
003E:  MOVWF  22
003F:  MOVLW  FA
0040:  MOVWF  23
0041:  CALL   004
0042:  DECFSZ 22,F
0043:  GOTO   03F
....................             output_c(0xf0); 
0044:  MOVLW  00
0045:  MOVWF  21
0046:  BSF    03.5
0047:  CLRF   07
0048:  MOVLW  F0
0049:  BCF    03.5
004A:  MOVWF  07
....................             delay_ms(1000); 
004B:  MOVLW  04
004C:  MOVWF  22
004D:  MOVLW  FA
004E:  MOVWF  23
004F:  CALL   004
0050:  DECFSZ 22,F
0051:  GOTO   04D
0052:  INCF   20,F
0053:  GOTO   032
....................          } 
....................          //secuencia 2  
....................          for(i=0;i<2;i++) 
0054:  CLRF   20
0055:  MOVF   20,W
0056:  SUBLW  01
0057:  BTFSS  03.0
0058:  GOTO   077
....................          { 
....................             output_c(0xcc); 
0059:  MOVLW  00
005A:  MOVWF  21
005B:  BSF    03.5
005C:  CLRF   07
005D:  MOVLW  CC
005E:  BCF    03.5
005F:  MOVWF  07
....................             delay_ms(1000); 
0060:  MOVLW  04
0061:  MOVWF  22
0062:  MOVLW  FA
0063:  MOVWF  23
0064:  CALL   004
0065:  DECFSZ 22,F
0066:  GOTO   062
....................             output_c(0x33); 
0067:  MOVLW  00
0068:  MOVWF  21
0069:  BSF    03.5
006A:  CLRF   07
006B:  MOVLW  33
006C:  BCF    03.5
006D:  MOVWF  07
....................             delay_ms(1000); 
006E:  MOVLW  04
006F:  MOVWF  22
0070:  MOVLW  FA
0071:  MOVWF  23
0072:  CALL   004
0073:  DECFSZ 22,F
0074:  GOTO   070
0075:  INCF   20,F
0076:  GOTO   055
....................          } 
....................          ///secuencia 3 
....................          for(i=0;i<2;i++) 
0077:  CLRF   20
0078:  MOVF   20,W
0079:  SUBLW  01
007A:  BTFSS  03.0
007B:  GOTO   0EE
....................          { 
....................             output_c(0x01); 
007C:  MOVLW  00
007D:  MOVWF  21
007E:  BSF    03.5
007F:  CLRF   07
0080:  MOVLW  01
0081:  BCF    03.5
0082:  MOVWF  07
....................             delay_ms(1000); 
0083:  MOVLW  04
0084:  MOVWF  22
0085:  MOVLW  FA
0086:  MOVWF  23
0087:  CALL   004
0088:  DECFSZ 22,F
0089:  GOTO   085
....................             output_c(0x03); 
008A:  MOVLW  00
008B:  MOVWF  21
008C:  BSF    03.5
008D:  CLRF   07
008E:  MOVLW  03
008F:  BCF    03.5
0090:  MOVWF  07
....................             delay_ms(1000); 
0091:  MOVLW  04
0092:  MOVWF  22
0093:  MOVLW  FA
0094:  MOVWF  23
0095:  CALL   004
0096:  DECFSZ 22,F
0097:  GOTO   093
....................             output_c(0x07); 
0098:  MOVLW  00
0099:  MOVWF  21
009A:  BSF    03.5
009B:  CLRF   07
009C:  MOVLW  07
009D:  BCF    03.5
009E:  MOVWF  07
....................             delay_ms(1000); 
009F:  MOVLW  04
00A0:  MOVWF  22
00A1:  MOVLW  FA
00A2:  MOVWF  23
00A3:  CALL   004
00A4:  DECFSZ 22,F
00A5:  GOTO   0A1
....................             output_c(0x0f); 
00A6:  MOVLW  00
00A7:  MOVWF  21
00A8:  BSF    03.5
00A9:  CLRF   07
00AA:  MOVLW  0F
00AB:  BCF    03.5
00AC:  MOVWF  07
....................             delay_ms(1000); 
00AD:  MOVLW  04
00AE:  MOVWF  22
00AF:  MOVLW  FA
00B0:  MOVWF  23
00B1:  CALL   004
00B2:  DECFSZ 22,F
00B3:  GOTO   0AF
....................             output_c(0x1f); 
00B4:  MOVLW  00
00B5:  MOVWF  21
00B6:  BSF    03.5
00B7:  CLRF   07
00B8:  MOVLW  1F
00B9:  BCF    03.5
00BA:  MOVWF  07
....................             delay_ms(1000); 
00BB:  MOVLW  04
00BC:  MOVWF  22
00BD:  MOVLW  FA
00BE:  MOVWF  23
00BF:  CALL   004
00C0:  DECFSZ 22,F
00C1:  GOTO   0BD
....................             output_c(0x3f); 
00C2:  MOVLW  00
00C3:  MOVWF  21
00C4:  BSF    03.5
00C5:  CLRF   07
00C6:  MOVLW  3F
00C7:  BCF    03.5
00C8:  MOVWF  07
....................             delay_ms(1000); 
00C9:  MOVLW  04
00CA:  MOVWF  22
00CB:  MOVLW  FA
00CC:  MOVWF  23
00CD:  CALL   004
00CE:  DECFSZ 22,F
00CF:  GOTO   0CB
....................             output_c(0x7f); 
00D0:  MOVLW  00
00D1:  MOVWF  21
00D2:  BSF    03.5
00D3:  CLRF   07
00D4:  MOVLW  7F
00D5:  BCF    03.5
00D6:  MOVWF  07
....................             delay_ms(1000); 
00D7:  MOVLW  04
00D8:  MOVWF  22
00D9:  MOVLW  FA
00DA:  MOVWF  23
00DB:  CALL   004
00DC:  DECFSZ 22,F
00DD:  GOTO   0D9
....................             output_c(0xff); 
00DE:  MOVLW  00
00DF:  MOVWF  21
00E0:  BSF    03.5
00E1:  CLRF   07
00E2:  MOVLW  FF
00E3:  BCF    03.5
00E4:  MOVWF  07
....................             delay_ms(1000); 
00E5:  MOVLW  04
00E6:  MOVWF  22
00E7:  MOVLW  FA
00E8:  MOVWF  23
00E9:  CALL   004
00EA:  DECFSZ 22,F
00EB:  GOTO   0E7
00EC:  INCF   20,F
00ED:  GOTO   078
....................          } 
....................          //secuencia 4 
....................          for(i=0; i<2;i++) 
00EE:  CLRF   20
00EF:  MOVF   20,W
00F0:  SUBLW  01
00F1:  BTFSS  03.0
00F2:  GOTO   110
....................          { 
....................             output_c(0x00); 
00F3:  MOVLW  00
00F4:  MOVWF  21
00F5:  BSF    03.5
00F6:  CLRF   07
00F7:  BCF    03.5
00F8:  CLRF   07
....................             delay_ms(1000); 
00F9:  MOVLW  04
00FA:  MOVWF  22
00FB:  MOVLW  FA
00FC:  MOVWF  23
00FD:  CALL   004
00FE:  DECFSZ 22,F
00FF:  GOTO   0FB
....................             output_c(0xff); 
0100:  MOVLW  00
0101:  MOVWF  21
0102:  BSF    03.5
0103:  CLRF   07
0104:  MOVLW  FF
0105:  BCF    03.5
0106:  MOVWF  07
....................             delay_ms(1000); 
0107:  MOVLW  04
0108:  MOVWF  22
0109:  MOVLW  FA
010A:  MOVWF  23
010B:  CALL   004
010C:  DECFSZ 22,F
010D:  GOTO   109
010E:  INCF   20,F
010F:  GOTO   0EF
....................          }          
0110:  INCF   20,F
0111:  GOTO   02D
....................       } 
0112:  GOTO   02C
....................        
....................    } 
.................... } 
0113:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
